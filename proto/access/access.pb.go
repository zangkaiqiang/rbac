// Code generated by protoc-gen-go. DO NOT EDIT.
// source: proto/access/access.proto

package libgo_rbac_access

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	grpc "google.golang.org/grpc"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type Permission struct {
	Id                   int32    `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Name                 string   `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Permission) Reset()         { *m = Permission{} }
func (m *Permission) String() string { return proto.CompactTextString(m) }
func (*Permission) ProtoMessage()    {}
func (*Permission) Descriptor() ([]byte, []int) {
	return fileDescriptor_d30f5b6e935be50b, []int{0}
}

func (m *Permission) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Permission.Unmarshal(m, b)
}
func (m *Permission) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Permission.Marshal(b, m, deterministic)
}
func (m *Permission) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Permission.Merge(m, src)
}
func (m *Permission) XXX_Size() int {
	return xxx_messageInfo_Permission.Size(m)
}
func (m *Permission) XXX_DiscardUnknown() {
	xxx_messageInfo_Permission.DiscardUnknown(m)
}

var xxx_messageInfo_Permission proto.InternalMessageInfo

func (m *Permission) GetId() int32 {
	if m != nil {
		return m.Id
	}
	return 0
}

func (m *Permission) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

type Response struct {
	Created              bool     `protobuf:"varint,1,opt,name=created,proto3" json:"created,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Response) Reset()         { *m = Response{} }
func (m *Response) String() string { return proto.CompactTextString(m) }
func (*Response) ProtoMessage()    {}
func (*Response) Descriptor() ([]byte, []int) {
	return fileDescriptor_d30f5b6e935be50b, []int{1}
}

func (m *Response) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Response.Unmarshal(m, b)
}
func (m *Response) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Response.Marshal(b, m, deterministic)
}
func (m *Response) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Response.Merge(m, src)
}
func (m *Response) XXX_Size() int {
	return xxx_messageInfo_Response.Size(m)
}
func (m *Response) XXX_DiscardUnknown() {
	xxx_messageInfo_Response.DiscardUnknown(m)
}

var xxx_messageInfo_Response proto.InternalMessageInfo

func (m *Response) GetCreated() bool {
	if m != nil {
		return m.Created
	}
	return false
}

type Id struct {
	Id                   int32    `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Id) Reset()         { *m = Id{} }
func (m *Id) String() string { return proto.CompactTextString(m) }
func (*Id) ProtoMessage()    {}
func (*Id) Descriptor() ([]byte, []int) {
	return fileDescriptor_d30f5b6e935be50b, []int{2}
}

func (m *Id) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Id.Unmarshal(m, b)
}
func (m *Id) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Id.Marshal(b, m, deterministic)
}
func (m *Id) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Id.Merge(m, src)
}
func (m *Id) XXX_Size() int {
	return xxx_messageInfo_Id.Size(m)
}
func (m *Id) XXX_DiscardUnknown() {
	xxx_messageInfo_Id.DiscardUnknown(m)
}

var xxx_messageInfo_Id proto.InternalMessageInfo

func (m *Id) GetId() int32 {
	if m != nil {
		return m.Id
	}
	return 0
}

func init() {
	proto.RegisterType((*Permission)(nil), "libgo.rbac.access.Permission")
	proto.RegisterType((*Response)(nil), "libgo.rbac.access.Response")
	proto.RegisterType((*Id)(nil), "libgo.rbac.access.Id")
}

func init() { proto.RegisterFile("proto/access/access.proto", fileDescriptor_d30f5b6e935be50b) }

var fileDescriptor_d30f5b6e935be50b = []byte{
	// 212 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xe2, 0x92, 0x2c, 0x28, 0xca, 0x2f,
	0xc9, 0xd7, 0x4f, 0x4c, 0x4e, 0x4e, 0x2d, 0x2e, 0x86, 0x52, 0x7a, 0x60, 0x31, 0x21, 0xc1, 0x9c,
	0xcc, 0xa4, 0xf4, 0x7c, 0xbd, 0xa2, 0xa4, 0xc4, 0x64, 0x3d, 0x88, 0x84, 0x92, 0x01, 0x17, 0x57,
	0x40, 0x6a, 0x51, 0x6e, 0x66, 0x71, 0x71, 0x66, 0x7e, 0x9e, 0x10, 0x1f, 0x17, 0x53, 0x66, 0x8a,
	0x04, 0xa3, 0x02, 0xa3, 0x06, 0x6b, 0x10, 0x53, 0x66, 0x8a, 0x90, 0x10, 0x17, 0x4b, 0x5e, 0x62,
	0x6e, 0xaa, 0x04, 0x93, 0x02, 0xa3, 0x06, 0x67, 0x10, 0x98, 0xad, 0xa4, 0xc2, 0xc5, 0x11, 0x94,
	0x5a, 0x5c, 0x90, 0x9f, 0x57, 0x9c, 0x2a, 0x24, 0xc1, 0xc5, 0x9e, 0x5c, 0x94, 0x9a, 0x58, 0x92,
	0x0a, 0xd1, 0xc4, 0x11, 0x04, 0xe3, 0x2a, 0x89, 0x70, 0x31, 0x79, 0xa6, 0xa0, 0x9b, 0x67, 0xb4,
	0x85, 0x91, 0x8b, 0xd7, 0x11, 0x6c, 0x71, 0x70, 0x6a, 0x51, 0x59, 0x66, 0x72, 0xaa, 0x50, 0x18,
	0x97, 0x98, 0x33, 0x58, 0x0b, 0x44, 0x18, 0xc9, 0x2d, 0xb2, 0x7a, 0x18, 0xae, 0xd5, 0x43, 0x48,
	0x4b, 0x49, 0x63, 0x91, 0x86, 0xb9, 0x4b, 0x89, 0x41, 0xc8, 0x9b, 0x4b, 0xd0, 0x3d, 0xb5, 0x04,
	0xa1, 0xde, 0xa9, 0xd2, 0x33, 0x45, 0x48, 0x14, 0x8b, 0x1e, 0xcf, 0x14, 0x29, 0xfc, 0x36, 0x29,
	0x31, 0x24, 0xb1, 0x81, 0x83, 0xcf, 0x18, 0x10, 0x00, 0x00, 0xff, 0xff, 0x72, 0xd9, 0x38, 0x8f,
	0x5b, 0x01, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// AccessServiceClient is the client API for AccessService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type AccessServiceClient interface {
	CreateAccessPermission(ctx context.Context, in *Permission, opts ...grpc.CallOption) (*Response, error)
	GetPermissionById(ctx context.Context, in *Id, opts ...grpc.CallOption) (*Permission, error)
}

type accessServiceClient struct {
	cc *grpc.ClientConn
}

func NewAccessServiceClient(cc *grpc.ClientConn) AccessServiceClient {
	return &accessServiceClient{cc}
}

func (c *accessServiceClient) CreateAccessPermission(ctx context.Context, in *Permission, opts ...grpc.CallOption) (*Response, error) {
	out := new(Response)
	err := c.cc.Invoke(ctx, "/libgo.rbac.access.AccessService/CreateAccessPermission", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *accessServiceClient) GetPermissionById(ctx context.Context, in *Id, opts ...grpc.CallOption) (*Permission, error) {
	out := new(Permission)
	err := c.cc.Invoke(ctx, "/libgo.rbac.access.AccessService/GetPermissionById", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// AccessServiceServer is the server API for AccessService service.
type AccessServiceServer interface {
	CreateAccessPermission(context.Context, *Permission) (*Response, error)
	GetPermissionById(context.Context, *Id) (*Permission, error)
}

func RegisterAccessServiceServer(s *grpc.Server, srv AccessServiceServer) {
	s.RegisterService(&_AccessService_serviceDesc, srv)
}

func _AccessService_CreateAccessPermission_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Permission)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(AccessServiceServer).CreateAccessPermission(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/libgo.rbac.access.AccessService/CreateAccessPermission",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(AccessServiceServer).CreateAccessPermission(ctx, req.(*Permission))
	}
	return interceptor(ctx, in, info, handler)
}

func _AccessService_GetPermissionById_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Id)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(AccessServiceServer).GetPermissionById(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/libgo.rbac.access.AccessService/GetPermissionById",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(AccessServiceServer).GetPermissionById(ctx, req.(*Id))
	}
	return interceptor(ctx, in, info, handler)
}

var _AccessService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "libgo.rbac.access.AccessService",
	HandlerType: (*AccessServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "CreateAccessPermission",
			Handler:    _AccessService_CreateAccessPermission_Handler,
		},
		{
			MethodName: "GetPermissionById",
			Handler:    _AccessService_GetPermissionById_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "proto/access/access.proto",
}
