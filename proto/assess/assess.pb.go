// Code generated by protoc-gen-go. DO NOT EDIT.
// source: proto/assess/assess.proto

package role

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	grpc "google.golang.org/grpc"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type Assess struct {
	Id                   int32    `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Assess) Reset()         { *m = Assess{} }
func (m *Assess) String() string { return proto.CompactTextString(m) }
func (*Assess) ProtoMessage()    {}
func (*Assess) Descriptor() ([]byte, []int) {
	return fileDescriptor_cd407f74e7a03435, []int{0}
}

func (m *Assess) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Assess.Unmarshal(m, b)
}
func (m *Assess) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Assess.Marshal(b, m, deterministic)
}
func (m *Assess) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Assess.Merge(m, src)
}
func (m *Assess) XXX_Size() int {
	return xxx_messageInfo_Assess.Size(m)
}
func (m *Assess) XXX_DiscardUnknown() {
	xxx_messageInfo_Assess.DiscardUnknown(m)
}

var xxx_messageInfo_Assess proto.InternalMessageInfo

func (m *Assess) GetId() int32 {
	if m != nil {
		return m.Id
	}
	return 0
}

type Response struct {
	Created              bool     `protobuf:"varint,1,opt,name=created,proto3" json:"created,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Response) Reset()         { *m = Response{} }
func (m *Response) String() string { return proto.CompactTextString(m) }
func (*Response) ProtoMessage()    {}
func (*Response) Descriptor() ([]byte, []int) {
	return fileDescriptor_cd407f74e7a03435, []int{1}
}

func (m *Response) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Response.Unmarshal(m, b)
}
func (m *Response) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Response.Marshal(b, m, deterministic)
}
func (m *Response) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Response.Merge(m, src)
}
func (m *Response) XXX_Size() int {
	return xxx_messageInfo_Response.Size(m)
}
func (m *Response) XXX_DiscardUnknown() {
	xxx_messageInfo_Response.DiscardUnknown(m)
}

var xxx_messageInfo_Response proto.InternalMessageInfo

func (m *Response) GetCreated() bool {
	if m != nil {
		return m.Created
	}
	return false
}

func init() {
	proto.RegisterType((*Assess)(nil), "role.Assess")
	proto.RegisterType((*Response)(nil), "role.Response")
}

func init() { proto.RegisterFile("proto/assess/assess.proto", fileDescriptor_cd407f74e7a03435) }

var fileDescriptor_cd407f74e7a03435 = []byte{
	// 146 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xe2, 0x92, 0x2c, 0x28, 0xca, 0x2f,
	0xc9, 0xd7, 0x4f, 0x2c, 0x2e, 0x4e, 0x2d, 0x2e, 0x86, 0x52, 0x7a, 0x60, 0x31, 0x21, 0x96, 0xa2,
	0xfc, 0x9c, 0x54, 0x25, 0x09, 0x2e, 0x36, 0x47, 0xb0, 0xa8, 0x10, 0x1f, 0x17, 0x53, 0x66, 0x8a,
	0x04, 0xa3, 0x02, 0xa3, 0x06, 0x6b, 0x10, 0x53, 0x66, 0x8a, 0x92, 0x0a, 0x17, 0x47, 0x50, 0x6a,
	0x71, 0x41, 0x7e, 0x5e, 0x71, 0xaa, 0x90, 0x04, 0x17, 0x7b, 0x72, 0x51, 0x6a, 0x62, 0x49, 0x2a,
	0x44, 0x01, 0x47, 0x10, 0x8c, 0x6b, 0x64, 0xcf, 0xc5, 0xeb, 0x98, 0x9c, 0x9c, 0x5a, 0x5c, 0x1c,
	0x9c, 0x5a, 0x54, 0x96, 0x99, 0x9c, 0x2a, 0xa4, 0xc7, 0xc5, 0xe3, 0x0c, 0x96, 0x83, 0x08, 0x0b,
	0xf1, 0xe8, 0x81, 0xec, 0xd1, 0x83, 0x58, 0x22, 0xc5, 0x07, 0xe1, 0xc1, 0x0c, 0x56, 0x62, 0x48,
	0x62, 0x03, 0xbb, 0xc6, 0x18, 0x10, 0x00, 0x00, 0xff, 0xff, 0x9c, 0x0a, 0x1a, 0x6b, 0xaa, 0x00,
	0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// AccessServiceClient is the client API for AccessService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type AccessServiceClient interface {
	CreateAccess(ctx context.Context, in *Assess, opts ...grpc.CallOption) (*Response, error)
}

type accessServiceClient struct {
	cc *grpc.ClientConn
}

func NewAccessServiceClient(cc *grpc.ClientConn) AccessServiceClient {
	return &accessServiceClient{cc}
}

func (c *accessServiceClient) CreateAccess(ctx context.Context, in *Assess, opts ...grpc.CallOption) (*Response, error) {
	out := new(Response)
	err := c.cc.Invoke(ctx, "/role.AccessService/CreateAccess", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// AccessServiceServer is the server API for AccessService service.
type AccessServiceServer interface {
	CreateAccess(context.Context, *Assess) (*Response, error)
}

func RegisterAccessServiceServer(s *grpc.Server, srv AccessServiceServer) {
	s.RegisterService(&_AccessService_serviceDesc, srv)
}

func _AccessService_CreateAccess_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Assess)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(AccessServiceServer).CreateAccess(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/role.AccessService/CreateAccess",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(AccessServiceServer).CreateAccess(ctx, req.(*Assess))
	}
	return interceptor(ctx, in, info, handler)
}

var _AccessService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "role.AccessService",
	HandlerType: (*AccessServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "CreateAccess",
			Handler:    _AccessService_CreateAccess_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "proto/assess/assess.proto",
}
